X.2 <- rexp(n=5)
t = seq(.01, 8, by = .01)
Y.2 <- sapply(t,function(t){mylikeli.exp(t,X.2)})
plot(t,Y.2, xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2)
grid(col = 4)
t[which.max(Y.2)]
(xbar=mean(X.2))
set.seed(30)
mylikeli.exp_log = function(lambda, x) {
length(x)*log(lambda) - lambda*sum(x)
}
X.3 <- rexp(5)
Y.3 <- sapply(t,function(t){mylikeli.exp_log(t,X.3)})
plot(t,Y.3, xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2)
grid(col = 4)
t[which.max(Y.3)]
(xbar=mean(X.3))
# X.2: exp function
# X.3: exp_log function
X.0 <- matrix(rexp(40,4), nrow = 4)
likeli.0 <- matrix(NA, nrow = dim(X.0)[2], ncol = length(t))
for (j in 1:ncol(X.0)) {
X.3 <- X.0[,j]
likeli.0[j,] <- sapply(t,function(t){mylikeli.exp_log(t,X.3)})
}
plot(t,likeli.0[1,], xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2, col = 1, ylim = c(0,max(likeli.0)))
for (j in 2:10){
lines(t,likeli.0[j,], lwd = 2, col = j)
}
grid(col = 3)
# X.2: exp function
# X.3: exp_log function
X.0 <- matrix(rexp(40,4), nrow = 4)
likeli.0 <- matrix(NA, nrow = dim(X.0)[2], ncol = length(t))
for (j in 1:ncol(X.0)) {
X.3 <- X.0[,j]
likeli.0[j,] <- sapply(t,function(t){mylikeli.exp(t,X.2)})
}
plot(t,likeli.0[1,], xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2, col = 1, ylim = c(0,max(likeli.0)))
for (j in 2:10){
lines(t,likeli.0[j,], lwd = 2, col = j)
}
grid(col = 3)
X.0 <- matrix(rexp(40,4), nrow = 4)
likeli.0 <- matrix(NA, nrow = dim(X.0)[2], ncol = length(t))
for (j in 1:ncol(X.0)) {
X.2 <- X.0[,j]
likeli.0[j,] <- sapply(t,function(t){mylikeli.exp(t,X.2)})
}
plot(t,likeli.0[1,], xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2, col = 1, ylim = c(0,max(likeli.0)))
for (j in 2:10){
lines(t,likeli.0[j,], lwd = 2, col = j)
}
grid(col = 3)
plot(t,log(likeli.0[1,]), xlab = 'lambda', ylab = 'log-likelihood',
type = 'l', lwd = 2, col = 1)
for (j in 2:10){
lines(t,log(likeli.0[j,]), lwd = 2, col = j)
}
for (j in 1:ncol(X.0)){
X.3 <- X.0[,j]
likeli.0[j,] <- sapply(t,function(t){mylikeli.exp_log(t,X.3)})
}
plot(t,likeli.0[1,], xlab = 'lambda', ylab = 'likelihood',
type = 'l', lwd = 2, col = 1, ylim = c(0,max(likeli.0)))
for (j in 2:10){
lines(t,likeli.0[j,], lwd = 2, col = j)
}
library(tidyverse)
x <- rbinom(n = 1000, size = 800, prob = .34)
prob <- x[x > 250 & x <290,]/length(x)
x <- rbinom(n = 1000, size = 800, prob = .34)
prob <- length(x[x > 250 & x <290,])/length(x)
x <- rbinom(n = 1000, size = 800, prob = .34)
x
# prob <- length(x[x >= 250 & x <= 290,])/length(x)
# prob
x <- rbinom(n = 1000, size = 800, prob = .34)
x[x = 250,]
x <- rbinom(n = 1000, size = 800, prob = .34)
x[x == 250,]
x <- rbinom(n = 1000, size = 800, prob = .34)
x <- as.data.frame(x)
x[x == 250,]
prob <- length(x[x >= 250 & x <= 290,])/length(x)
prob
x <- rbinom(n = 1000, size = 800, prob = .34)
x <- as.data.frame(x)
prob <- length(x[x >= 250 & x <= 290,])/length(x)
prob
x <- rbinom(n = 1000, size = 800, prob = .34)
x <- as.data.frame(x)
prob <- length(x[x >= 250 & x <= 290,])/(length(x))
prob
x <- rbinom(n = 1000, size = 800, prob = .34)
x <- as.data.frame(x)
length(x)
prob <- length(x[x >= 250 & x <= 290,])/(length(x))
prob
x <- rbinom(n = 1000, size = 800, prob = .34)
x <- as.data.frame(x)
prob <- length(x[x >= 250 & x <= 290,])/n
x <- rbinom(n = 1000, size = 800, prob = .34)
x <- as.data.frame(x)
prob <- x[x >= 250 & x <= 290,]/n
x <- rbinom(n = 1000, size = 800, prob = .34)
x <- as.data.frame(x)
prob <- length(x[x >= 250 & x <= 290,])/1000
prob
View(x)
x <- pbinom(q = 250, 290, size = 800, prob = .34)
x
x <- dnorm(250, mean = 272, sd = sqrt(179.52))
x
x <- pbinom(q = 250, size = 800, prob = .34) # prob which is less than 250
y <- pbinom(q = 290, size = 800, prob = .34) #                         290
prob <- y - x
prob
# x <- rbinom(n = 1000, size = 800, prob = .34)
# x <- as.data.frame(x)
#
# prob <- length(x[x >= 250 & x <= 290,])/1000
# prob
set.seed(20)
mylikeli.exp = function(lambda, x) {
(lambda^length(x))*exp(-lambda*sum(x))
}
X.2 <- rexp(n=5)
t = seq(.01, 8, by = .01)
Y.2 <- sapply(t,function(t){mylikeli.exp(t,X.2)})
plot(t,Y.2, xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2)
grid(col = 4)
t[which.max(Y.2)]
(xbar=mean(X.2))
set.seed(30)
mylikeli.exp_log = function(lambda, x) {
length(x)*log(lambda) - lambda*sum(x)
}
X.3 <- rexp(5)
Y.3 <- sapply(t,function(t){mylikeli.exp_log(t,X.3)})
plot(t,Y.3, xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2)
grid(col = 4)
t[which.max(Y.3)]
(xbar=mean(X.3))
# likelihood
X.0 <- matrix(rexp(40,4), nrow = 4)
likeli.0 <- matrix(NA, nrow = dim(X.0)[2], ncol = length(t))
for (j in 1:ncol(X.0)) {
X.2 <- X.0[,j]
likeli.0[j,] <- sapply(t,function(t){mylikeli.exp(t,X.2)})
}
plot(t,likeli.0[1,], xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2, col = 1, ylim = c(0,max(likeli.0)))
for (j in 2:10){
lines(t,likeli.0[j,], lwd = 2, col = j)
}
grid(col = 3)
# log-likelihood
plot(t,log(likeli.0[1,]), xlab = 'lambda', ylab = 'log-likelihood', type = 'l', lwd = 2, col = 1)
for (j in 2:10){
lines(t,log(likeli.0[j,]), lwd = 2, col = j)
}
set.seed(20)
mylikeli.exp = function(lambda, x) {
(lambda^length(x))*exp(-lambda*sum(x))
}
X.2 <- rexp(n=5)
t = seq(.01, 8, by = .01)
Y.2 <- sapply(t,function(t){mylikeli.exp(t,X.2)})
plot(t,Y.2, xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2)
grid(col = 4)
t[which.max(Y.2)]
(xbar=mean(X.2))
set.seed(20)
mylikeli.exp_log = function(lambda, x) {
length(x)*log(lambda) - lambda*sum(x)
}
X.3 <- rexp(5)
Y.3 <- sapply(t,function(t){mylikeli.exp_log(t,X.3)})
plot(t,Y.3, xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2)
grid(col = 4)
t[which.max(Y.3)]
(xbar=mean(X.3))
# likelihood
X.0 <- matrix(rexp(40,4), nrow = 4)
likeli.0 <- matrix(NA, nrow = dim(X.0)[2], ncol = length(t))
for (j in 1:ncol(X.0)) {
X.2 <- X.0[,j]
likeli.0[j,] <- sapply(t,function(t){mylikeli.exp(t,X.2)})
}
plot(t,likeli.0[1,], xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2, col = 1, ylim = c(0,max(likeli.0)))
for (j in 2:10){
lines(t,likeli.0[j,], lwd = 2, col = j)
}
grid(col = 3)
# log-likelihood
plot(t,log(likeli.0[1,]), xlab = 'lambda', ylab = 'log-likelihood', type = 'l', lwd = 2, col = 1)
for (j in 2:10){
lines(t,log(likeli.0[j,]), lwd = 2, col = j)
}
library(tidyverse)
x <- rbinom(n=1000, size = 80, prob = 0.2)
y <- rbinom(n=1000, size = 100, prob = 0.7)
df <- tibble (
x, y
)
df <- df |> mutate(z = x + y)
num_df_12 <- nrow(df[x < 12,])
num_df_18 <- nrow(df[x < 18,])
prob_1 <- num_df_12/num_df_18
prob_1
# for (i in 1:nrows) {
#   # probability of X < 12
#   if (df$x < 12) {
#     prob_x <- prob_x + 1
#   }
#   # probability of X < 18
#   if (df$x < 18) {
#     prob_x_18 <- prob_x_18 + 1
#   }
# }
#
# prob <- prob_x / prob_x_18
prob_2 <- mean(df[x < 18,])
prob_2
plot.ecdf()
library(tidyverse)
# pbinom: summation of dbinom (discrete -> continuous / continuous !-> discrete)
x <- pbinom(q = 250, size = 800, prob = .34) # prob which is less than 250
y <- pbinom(q = 290, size = 800, prob = .34) #                         290
prob <- y - x
prob
# single result = Bernoulli
mean = 1 * .34
sd = sqrt(1 * .34 *.66)
# pnorm: cumulative
# rnorm: generating
# dnorm: discrete
x <- pnorm(250, mean = 800 * .34, sd = sqrt(800 * .34 * .66))
y <- pnorm(290, mean = 800 * .34, sd = sqrt(800 * .34 * .66))
set.seed(20)
mylikeli.exp = function(lambda, x) {
(lambda^length(x))*exp(-lambda*sum(x))
}
X.2 <- rexp(n=5)
t = seq(.01, 8, by = .01)
Y.2 <- sapply(t,function(t){mylikeli.exp(t,X.2)})
plot(t,Y.2, xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2)
grid(col = 4)
t[which.max(Y.2)]
(xbar=mean(X.2))
set.seed(20)
mylikeli.exp_log = function(lambda, x) {
length(x)*log(lambda) - lambda*sum(x)
}
X.3 <- rexp(5)
Y.3 <- sapply(t,function(t){mylikeli.exp_log(t,X.3)})
plot(t,Y.3, xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2)
grid(col = 4)
t[which.max(Y.3)]
(xbar=mean(X.3))
# likelihood
X.0 <- matrix(rexp(40,4), nrow = 4)
likeli.0 <- matrix(NA, nrow = dim(X.0)[2], ncol = length(t))
for (j in 1:ncol(X.0)) {
X.2 <- X.0[,j]
likeli.0[j,] <- sapply(t,function(t){mylikeli.exp(t,X.2)})
}
plot(t,likeli.0[1,], xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2, col = 1, ylim = c(0,max(likeli.0)))
for (j in 2:10){
lines(t,likeli.0[j,], lwd = 2, col = j)
}
grid(col = 3)
# log-likelihood
plot(t,log(likeli.0[1,]), xlab = 'lambda', ylab = 'log-likelihood', type = 'l', lwd = 2, col = 1)
for (j in 2:10){
lines(t,log(likeli.0[j,]), lwd = 2, col = j)
}
set.seed(30)
mylikeli.exp = function(lambda, x) {
(lambda^length(x))*exp(-lambda*sum(x))
}
X.2 <- rexp(n=5)
t = seq(.01, 8, by = .01)
Y.2 <- sapply(t,function(t){mylikeli.exp(t,X.2)})
plot(t,Y.2, xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2)
grid(col = 4)
t[which.max(Y.2)]
(xbar=mean(X.2))
set.seed(30)
mylikeli.exp_log = function(lambda, x) {
length(x)*log(lambda) - lambda*sum(x)
}
X.3 <- rexp(5)
Y.3 <- sapply(t,function(t){mylikeli.exp_log(t,X.3)})
plot(t,Y.3, xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2)
grid(col = 4)
t[which.max(Y.3)]
(xbar=mean(X.3))
# likelihood
X.0 <- matrix(rexp(40,4), nrow = 4)
likeli.0 <- matrix(NA, nrow = dim(X.0)[2], ncol = length(t))
for (j in 1:ncol(X.0)) {
X.2 <- X.0[,j]
likeli.0[j,] <- sapply(t,function(t){mylikeli.exp(t,X.2)})
}
plot(t,likeli.0[1,], xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2, col = 1, ylim = c(0,max(likeli.0)))
for (j in 2:10){
lines(t,likeli.0[j,], lwd = 2, col = j)
}
grid(col = 3)
# log-likelihood
plot(t,log(likeli.0[1,]), xlab = 'lambda', ylab = 'log-likelihood', type = 'l', lwd = 2, col = 1)
for (j in 2:10){
lines(t,log(likeli.0[j,]), lwd = 2, col = j)
}
# pnorm: cumulative
# rnorm: generating
# dnorm: discrete
x <- pnorm(250, mean = 800 * .34, sd = sqrt(800 * .34 * .66))
y <- pnorm(290, mean = 800 * .34, sd = sqrt(800 * .34 * .66))
prob <- y - x
# pnorm: cumulative
# rnorm: generating
# dnorm: discrete
x <- pnorm(250, mean = 800 * .34, sd = sqrt(800 * .34 * .66))
y <- pnorm(290, mean = 800 * .34, sd = sqrt(800 * .34 * .66))
prob <- y - x
prob
# pbinom: summation of dbinom (discrete -> continuous / continuous !-> discrete)
x <- pbinom(q = 250.5, size = 800, prob = .34) # prob which is less than 250
y <- pbinom(q = 290.5, size = 800, prob = .34) #                         290
prob <- y - x
prob
# get samples
X.2 <- rexp(n=5, rate = 3)
# which t has the maximum likelihood
# t = lambda
t = seq(.01, 8, by = .01)
Y.2 <- sapply(t,function(t){mylikeli.exp(t,X.2)})
plot(t,Y.2, xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2)
grid(col = 4)
t[which.max(Y.2)]
(xbar=mean(X.2))
# find the likelihood function first
set.seed(30)
mylikeli.exp = function(lambda, x) {
(lambda^length(x))*exp(-lambda*sum(x))
}
# get samples
X.2 <- rexp(n=5, rate = 3)
# which t has the maximum likelihood
# t = lambda
t = seq(.01, 8, by = .01)
Y.2 <- sapply(t,function(t){mylikeli.exp(t,X.2)})
plot(t,Y.2, xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2)
grid(col = 4)
t[which.max(Y.2)]
(xbar=mean(X.2))
# get samples
X.2 <- rexp(n=5)
# which t has the maximum likelihood
# t = lambda
t = seq(.01, 8, by = .01)
Y.2 <- sapply(t,function(t){mylikeli.exp(t,X.2)})
plot(t,Y.2, xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2)
grid(col = 4)
t[which.max(Y.2)]
(xbar=mean(X.2))
set.seed(30)
mylikeli.exp_log = function(lambda, x) {
length(x)*log(lambda) - lambda*sum(x)
}
X.3 <- rexp(5)
Y.3 <- sapply(t,function(t){mylikeli.exp_log(t,X.3)})
plot(t,Y.3, xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2)
grid(col = 4)
t[which.max(Y.3)]
(xbar=mean(X.3))
# likelihood
X.0 <- matrix(rexp(40,4), nrow = 4)
likeli.0 <- matrix(NA, nrow = dim(X.0)[2], ncol = length(t))
for (j in 1:ncol(X.0)) {
X.2 <- X.0[,j]
likeli.0[j,] <- sapply(t,function(t){mylikeli.exp(t,X.2)})
}
plot(t,likeli.0[1,], xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2, col = 1, ylim = c(0,max(likeli.0)))
for (j in 2:10){
lines(t,likeli.0[j,], lwd = 2, col = j)
}
grid(col = 3)
# log-likelihood
plot(t,log(likeli.0[1,]), xlab = 'lambda', ylab = 'log-likelihood', type = 'l', lwd = 2, col = 1)
for (j in 2:10){
lines(t,log(likeli.0[j,]), lwd = 2, col = j)
}
library(tidyverse)
# pbinom: summation of dbinom (discrete -> continuous / continuous !-> discrete)
x <- pbinom(q = 250.5, size = 800, prob = .34) # prob which is less than 250
y <- pbinom(q = 290.5, size = 800, prob = .34) #                         290
prob <- y - x
prob
# single result = Bernoulli
mean = 1 * .34
sd = sqrt(1 * .34 *.66)
# approximate normal distribution = normal distribution
# pnorm: cumulative
# rnorm: generating
# dnorm: discrete
x <- pnorm(250, mean = 800 * .34, sd = sqrt(800 * .34 * .66))
y <- pnorm(290, mean = 800 * .34, sd = sqrt(800 * .34 * .66))
prob <- y - x
prob
# find the likelihood function first
set.seed(30)
mylikeli.exp = function(lambda, x) {
(lambda^length(x))*exp(-lambda*sum(x))
}
# get samples
X.2 <- rexp(n=5)
# which t has the maximum likelihood
# t = lambda
t = seq(.01, 8, by = .01)
Y.2 <- sapply(t,function(t){mylikeli.exp(t,X.2)})
plot(t,Y.2, xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2)
grid(col = 4)
t[which.max(Y.2)]
(xbar=mean(X.2))
set.seed(30)
mylikeli.exp_log = function(lambda, x) {
length(x)*log(lambda) - lambda*sum(x)
}
X.3 <- rexp(5)
Y.3 <- sapply(t,function(t){mylikeli.exp_log(t,X.3)})
plot(t,Y.3, xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2)
grid(col = 4)
t[which.max(Y.3)]
(xbar=mean(X.3))
# likelihood
X.0 <- matrix(rexp(40,4), nrow = 4)
likeli.0 <- matrix(NA, nrow = dim(X.0)[2], ncol = length(t))
for (j in 1:ncol(X.0)) {
X.2 <- X.0[,j]
likeli.0[j,] <- sapply(t,function(t){mylikeli.exp(t,X.2)})
}
plot(t,likeli.0[1,], xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2, col = 1, ylim = c(0,max(likeli.0)))
for (j in 2:10){
lines(t,likeli.0[j,], lwd = 2, col = j)
}
grid(col = 3)
# log-likelihood
plot(t,log(likeli.0[1,]), xlab = 'lambda', ylab = 'log-likelihood', type = 'l', lwd = 2, col = 1)
for (j in 2:10){
lines(t,log(likeli.0[j,]), lwd = 2, col = j)
}
View(likeli.0)
# single result = Bernoulli
mean = 1 * .34
sd = sqrt(1 * .34 *.66)
# single result = Bernoulli
mean = 1 * .34
sd = sqrt(1 * .34 *.66)
sd
# single result = Bernoulli
mean = 1 * .34
sd = sqrt(1 * .34 *.66/800)
sd
# single result = Bernoulli
mean = 1 * .34
sd = sqrt(1 * .34 *.66)
sd
mysize = c(5,10,20,40, 80)
likeli.1 <- matrix(NA, nrow = length(mysize), ncol = length(t))
for (j in 1:length(mysize)){
mysample <- rexp(mysize[j], lambda = 4)
likeli.1[j,]  <- sapply(t,function(t){mylikeli.exp(t,mysample)})
}
mysize = c(5,10,20,40, 80)
likeli.1 <- matrix(NA, nrow = length(mysize), ncol = length(t))
for (j in 1:length(mysize)){
mysample <- rexp(mysize[j])
likeli.1[j,]  <- sapply(t,function(t){mylikeli.exp(t,mysample)})
}
plot(t,log(likeli.1[1,]), xlab = 'lambda', ylab = 'log-likelihood',
type = 'l', lwd = 2, col = 1, ylim = c(-300,0))
for (j in 2:length(mysize)){
lines(t,log(likeli.1[j,]), lwd = 2, col = j)
}
mysize = c(5,10,20,40, 80)
likeli.1 <- matrix(NA, nrow = length(mysize), ncol = length(t))
for (j in 1:length(mysize)){
mysample <- rexp(mysize[j])
likeli.1[j,]  <- sapply(t,function(t){mylikeli.exp(t,mysample)})
}
plot(t,log(likeli.1[1,]), xlab = 'lambda', ylab = 'log-likelihood',
type = 'l', lwd = 2, col = 1, ylim = c(-300,0), legend = TRUE)
for (j in 2:length(mysize)){
lines(t,log(likeli.1[j,]), lwd = 2, col = j)
}
mysize = c(5,10,20,40, 80)
likeli.1 <- matrix(NA, nrow = length(mysize), ncol = length(t))
for (j in 1:length(mysize)){
mysample <- rexp(mysize[j])
likeli.1[j,]  <- sapply(t,function(t){mylikeli.exp(t,mysample)})
}
plot(t,log(likeli.1[1,]), xlab = 'lambda', ylab = 'log-likelihood',
type = 'l', lwd = 2, col = 1, ylim = c(-300,0))
for (j in 2:length(mysize)){
lines(t,log(likeli.1[j,]), lwd = 2, col = j)
}
# single result = Bernoulli
mean = 1 * .34
sd = sqrt(1 * .34 *.66)
