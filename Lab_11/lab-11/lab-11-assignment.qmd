---
title: "Lab-11: Assignment"
author: "Dr. Purna Gamage"
format: 
  html: 
    embed-resources: true
---

## Problem 1-2 will be answered using the "Artists.csv"  data set.

### Please find the "Artists.csv"  data set in the Canvas-> Lab 10 folder.

Meanwhile, this is how you can retrieve Spotify Data:

Spotify’s API gives you the ability to extract several audio features of a song. The available features that also have been used for this analysis are: <https://medium.com/@boplantinga/what-do-spotifys-audio-features-tell-us-about-this-year-s-eurovision-song-contest-66ad188e112a>

The first step was registering my application in the API Website(<https://developer.spotify.com/documentation/web-api/>) and getting the keys (Client ID and Client Secret) for future requests. The Spotify Web API has different URIs (Uniform Resource Identifiers) to access playlists, artists, or tracks information. 

I extracted all the audio features for 3 musicians Taylor Swift, John Legend and Beyonce. But we are only going to use  selected features.

(If you like to use this data for your Final Project, you are more than welcome to :), but please extract more features from more musicians)

```{r, eval=FALSE}
library(Rspotify)
library(httr)
library(jsonlite)
library(spotifyr) #spotifyr is an R wrapper for pulling track audio features and other information from Spotify’s Web API in bulk.

my_token <- get_spotify_api_token(client_id = "d5f54749964f4a12b7a3dd6a42767e58", 
                                  client_secret = "5534b841c00d47f6879abfec2042f38a") # you have to register and get your keys

#or
get_spotify_access_token(
  client_id = Sys.getenv(SPOTIFY_CLIENT_ID),
  client_secret = Sys.getenv(SPOTIFY_CLIENT_SECRET)
)


#You can get much more details here
#https://cran.r-project.org/web/packages/spotidy/vignettes/Connecting-with-the-Spotify-API.html


Taylor_Swift <- get_artist_audio_features("Taylor Swift")
John_Legend <- get_artist_audio_features("John Legend")
Beyonce <- get_artist_audio_features("Beyonce")

## You can also access the variables by indexes, but the names are here to see what I'm retreiving

Taylor_Swift_A <-data.frame(Taylor_Swift$artist_name,Taylor_Swift$valence,
                            Taylor_Swift$danceability,Taylor_Swift$energy,Taylor_Swift$loudness,
                            Taylor_Swift$speechiness,Taylor_Swift$acousticness,Taylor_Swift$liveness,
                            Taylor_Swift$tempo,Taylor_Swift$track_name, Taylor_Swift$album_name,Taylor_Swift$album_release_year)
colnames(Taylor_Swift_A) <- c("artist_name","Valence","danceability","energy",
                              "loudness","speechiness","acousticness","liveness",
                              "tempo","track_name","album_name","album_release_year")
head(Taylor_Swift_A)


John_Legend_A <-data.frame(John_Legend$artist_name,John_Legend$valence,
                            John_Legend$danceability,John_Legend$energy,John_Legend$loudness,
                            John_Legend$speechiness,John_Legend$acousticness,John_Legend$liveness,
                            John_Legend$tempo,John_Legend$track_name, John_Legend$album_name,John_Legend$album_release_year)

colnames(John_Legend_A) <- c("artist_name","alence","danceability","energy",
                              "loudness","speechiness","acousticness","liveness",
                              "tempo","track_name","album_name","album_release_year")
head(John_Legend_A)


Beyonce_A <-data.frame(Beyonce$artist_name,Beyonce$valence,
                       Beyonce$danceability,Beyonce$energy,Beyonce$loudness,
                       Beyonce$speechiness,Beyonce$acousticness,Beyonce$liveness,
                       Beyonce$tempo,Beyonce$track_name, Beyonce$album_name, Beyonce$album_release_year)

colnames(Beyonce_A) <- c("artist_name","Valence","danceability","energy",
                             "loudness","speechiness","acousticness","liveness",
                             "tempo","track_name","album_name","album_release_year")
head(Beyonce_A)


Artists <-rbind(Taylor_Swift_A,John_Legend_A, Beyonce_A)
head(Artists)
write.csv(Artists, "Artists.csv")
```

You can download the data set "Artists.csv" from Canvas->"Midterm" Folder.
```{r}
library(ggplot2)
library(ggExtra)
library(tidyverse)
library(plotly)
library(dplyr)
library(knitr)
```

```{r}
artists <- read_csv('Artists.csv')
head(artists)
```


## Problem 1: Hypothesis Testing - part 1 

Data Science Question: Does the average "speechiness" is larger for Taylor Swift than that of John Legend ?

a. Perform EDA (Exploratory Data Analysis) using some Data Visualizations.
```{r}
# histogram
taylor <- artists[artists$artist_name=='Taylor Swift',]
hist(taylor$speechiness, main = 'Speechiness of Taylor Swift')

legend <- artists[artists$artist_name=='John Legend',]
hist(legend$speechiness, main = 'Speechiness of John Legend')

# boxplot
artists %>%
  ggplot( aes(x = artist_name, y = speechiness)) +
  geom_boxplot() +ggtitle('Speechiness of the artists')

# density plot
t_speechiness<- density(taylor$speechiness)
plot(t_speechiness, frame = FALSE, col = 'blue', main = 'Density plot of Taylor Swift Speechiness')

j_speechiness<- density(legend$speechiness)
plot(j_speechiness, frame = FALSE, col = 'blue', main = 'Density plot of John Legend Speechiness')

# QQ plot
qqnorm(taylor$speechiness)
qqline(taylor$speechiness)

qqnorm(legend$speechiness)
qqline(legend$speechiness)
```

b. Write the null and alternative hypothesis for this test.

__Null Hypothesis(H0): The average 'speechiness' of Taylor Swift is equal to that of John Legend.__

__Alternative Hypothesis(H1): The average speechiness is significantly greater for Taylor Swift than that of John Legend.__

c. Perform a t-test and state your results and non-technical conclusion.

#### Performing t-test
```{r}
ts_speechiness <- artists$speechiness[artists$artist_name == 'Taylor Swift']
jl_speechiness <- artists$speechiness[artists$artist_name == 'John Legend']

t_test_result <- t.test(ts_speechiness, jl_speechiness, alternative = 'greater')

t_test_result
```

#### Stating results

A 't-test' is a statistical test that is used to compare the means of two groups. 

The `t.test` function provides 

1. an explanation of what is being compared, called `data` in the table: in this case, the test compared Taylor Swift's speechiness and John Legend's speechiness. 

2. a t-value that indicates the direction of the difference and it is 1.9578 in our case: since the t-value is positive, this means Taylor Swift's speechiness has higher average than that of John Legend's.

3. a df, which is degree of freedom. This value shows how many free data points are available in your test for making comparisons. The greater the degrees of freedom, the better the statistical test will work. We got 576.99 of degree of freedom which means our statistical test works very well. 

4. a p-value: Based on the p-value we have, we can decide whether to reject the hypothesis or not. In our case, we got 0.025 of p-value. The p-value is small enough for us to reject the null hypothesis. 

#### Non-technical Conclusion

Given the value of significance level of 0.05, we can decide to reject the null hypothesis. That is, the test result indicates that the average of Taylor Swift's speechiness is greater than that of John Legend. 

d. What can you say about the confidence interval? (Interpret)

95% confidence interval means that we have 95% chance of being right with the hypothesis, and 5% chance of being wrong. In our case, the confidence interval is 0.003044749. This means that we are 95% confident that the true difference in mean speechiness between the two groups lies above 0.003044749. 

As a result, we can interpret this data as the following: We are 95% confident that the true difference in mean speechiness between Taylor Swift and John Legend is greater than 0.003044749. The p-value is small enough to rejet the null hypothesis, indicating that there is a significant difference in the average of speechiness between the two groups. 

Given this confidence interval and the p-value, this data leads us to the fact that Taylor Swift's average speechiness is likely higher than that of John Legend.

e. Perform a bootstrap test for ratio of means of "speechiness", Find the 95% bootstrap percentile interval for the ratio of means and write your conclusion. 
```{r}
ratio <- mean(ts_speechiness) / mean(jl_speechiness)
ratio
```
```{r}
bootstrap <- function(ts, jl, n = 1000) {
  ratios <- numeric(n)
  for (i in 1:n) {
    sample1 <- sample(ts, replace = TRUE)
    sample2 <- sample(jl, replace = TRUE)
    ratios[i] <- mean(sample1) / mean(sample2)
  }
  return(ratios)
}

set.seed(123)  
bootstrap_ratio <- bootstrap(ts_speechiness, jl_speechiness)

# 95% bootstrap interval
bootstrap_interval <- quantile(bootstrap_ratio, c(0.025, 0.975))
bootstrap_interval
```


f. What is the bootstrap estimate of the bias for the mean ratio?
```{r}
bias <- mean(bootstrap_ratio) - ratio
bias
```


g. Compare your results from part c) and part e).

The result of c) t-test is 

- t = 1.9578, df = 576.99, p-value = 0.02537
- Confidence Interval: (0.003044749, Inf)
- mean of x = 0.11444837, mean of y = 0.09523882


The result of e) bootstrap test is 

- ratio = 1.201699
- 95% Bootstrap Percentile Interval: (0.9987683,1.4547429)
- Bias for the Mean Ratio: 0.004550032


Both methods, t-test and bootstrap test indicate that there is a difference in speechiness means between Taylor Swift and John Legend.

## Problem 2: Hypothesis Testing-part 2 

Data Science Question: Does "Valence" of the songs depends on the Artist?

Valence: A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).

a. Create a new variable with the name " Valence_C" and add it to the "Artists" data set. Fill this variable with values "more positive","Moderate","more negative" according to the value of "Valence" such that 0.8-1 is "more positive", 0.5-0.79 is "Moderate" and 0.0-0.49 is "more negative".

```{r}
artists$Valence_C <- 'moderate'
artists$Valence_C[artists$Valence >= 0.8] <- 'more positive'
artists$Valence_C[artists$Valence >= 0.79 & artists$Valence <= 0.5] <- 'moderate'
artists$Valence_C[artists$Valence < 0.5] <- 'more negative'

head(artists)
```

b. Carry out an appropriate test to make an informed decision for the above data science question using this new created variable  "Valence_C". Don't forget to Write the null and alternative hypothesis.
Does "Valence" of the songs depends on the Artist?

#### Hypothesis

__Null Hypothesis(H0): Valence of the songs does not depend on the Artist.__

__Alternative Hypothesis(H1): There is a dependence between the 'Valence' of songs and the Artist.__


#### Appropriate tests

##### chi-square test

```{r}
# assign valence and valence_c variable
ts_data <- artists[artists$artist_name == 'Taylor Swift', c('artist_name','Valence_C')]
jl_data <- artists[artists$artist_name == 'John Legend', c('artist_name','Valence_C')]

df <- as.data.frame(rbind(ts_data, jl_data))
valence_count <- table(df)

chi_square_test <- chisq.test(valence_count)
print(chi_square_test)
```
#### t-test

```{r}
ts_valence_c <- factor(ts_data$Valence_C, levels = c("more negative", "moderate", "more positive"), labels = c(-1, 0, 1))
jl_valence_c <- factor(jl_data$Valence_C, levels = c("more negative", "moderate", "more positive"), labels = c(-1, 0, 1))

ts_valence_c <- as.numeric(ts_valence_c)
jl_valence_c <- as.numeric(jl_valence_c)

t_test_result <- t.test(ts_valence_c, jl_valence_c)

t_test_result
```

c. What is your conclusion?

Chi-squared test is an appropriate statistical test for categorical variables. Since the data contained categorical variables of 'most negative', 'moderate', 'most postive', we should use chi-squared test for this data. 

However, I also tried to cast the categorical type to a `factor` type and type-casted to numeric value and also tried a t-test.

According to the result of chi-squared test, p-value is 0.002369 which is less than the significance level. So we can reject the null hypothesis, which also means that there is a significant dependency between the 'Valence' and the 'Artist'.

The t-test also shows that we have enough evidence to reject the null hypothesis based on the p-value. P-value is less than the significance level, so we can say that there is a significant dependency between the 'Valence' and the 'Artist'.

d. With your experience, what is your opinion about the conclusion you made in part c?

I do think the value of valence depends on the artists. If there are more people who are fond of the artists, then they are more likely to consider their music as a positive way. On the other hand, if the artists has negative evaluation from the audience, they are more likely to have negative valence on their music. 